#load_module "/usr/lib/nginx/modules/ngx_http_xslt_filter_module.so";

user pi;
worker_processes auto;
pid /run/nginx.pid;


events {
    worker_connections 900;
    multi_accept on;
}

http {
    proxy_cache_path /tmp/cache keys_zone=one:512m;

    server {
        charset UTF-8;

        listen 443 ssl;
        listen 8443 ssl;
        listen [::]:443 ssl;
        listen [::]:8443 ssl;

        # --- SSL Certificate is strongly recommended
        ssl_certificate /this/folder/.nginx/imageboard.cert;
        ssl_certificate_key /this/folder/.nginx/imageboard.key;

        root /imagefolder;

        rewrite_log on;
        access_log /tmp/ngx_access.log;
        error_log /tmp/ngx_error.log;

        # ---- IMAGE FOLDERS: EDIT THIS FILE ----
        location /imagefolder/ {
            # Autoindex only shows when nginx can't file its own index files

            autoindex on;
            autoindex_format json;

            ## Uncomment this line if you want to explore the backend directly
            # xslt_string_param title $1;
            # xslt_stylesheet /this/folder/template.xslt;

            # kill cache
            auth_basic "Please enter your credentials";
            auth_basic_user_file /this/folder/.htpasswd;

            add_header Last-Modified $date_gmt;
            add_header Cache-Control
                'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            if_modified_since off;
            expires off;
            etag off;
        }

        # ----- THUMBNAILS, IMAGE AND VIDEO -----

        # Original picture
        location /_img/uploads {
            alias /mnt$filename;
            expires 20d;
        }

        # thumbnail
        location ~* /(.+)§thumb§(large|small)$ {
            set $filename /$1;

            if (-f $filename) {
                break;
            }

            # Prepare the required parameters (width, height, cropping or zooming) according to the URL address!
            set $img_version $2;
            set $img_type resize;
            set $img_w -;
            set $img_h -;
            if ($img_version = 'large' ) {
                set $img_type crop;
                set $img_w 220;
                set $img_h 220;
            }
            if ($img_version = 'small' ) {
                set $img_type crop;
                set $img_w 110;
                set $img_h 110;
            }
            rewrite ^ /_$img_type;
        }

        # Processing of Scaled Pictures
        location /_resize {
            alias /mnt$filename;
            image_filter resize $img_w $img_h;
            image_filter_jpeg_quality 95;
            image_filter_buffer 100M;
            image_filter_interlace on;
        }

        # Processing of clipped pictures
        location /_crop {
            alias /mnt$filename;
            image_filter crop $img_w $img_h;
            image_filter_jpeg_quality 95;
            image_filter_buffer 100M;
            image_filter_interlace on;
        }

        location ~* /(.+)§vthumb$ {
            auth_basic "Please enter your credentials to access";
            auth_basic_user_file /this/folder/.nginx/.htpasswd;

            video_thumbextractor;
            video_thumbextractor_video_filename /$1;
            video_thumbextractor_video_second 8;
            video_thumbextractor_image_width 220;
            video_thumbextractor_tile_sample_interval 30;
            video_thumbextractor_image_height 220;
            video_thumbextractor_tile_rows 1;
            video_thumbextractor_tile_cols 1;
        }
    }
}
